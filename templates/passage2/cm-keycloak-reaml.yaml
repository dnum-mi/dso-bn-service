{{- if .Values.passage2.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: realm-keycloak
data:
  realm.json: |
    {
      "id": "4b1b4410-9b3f-4e36-8fc8-b57db3da2c96",
      "realm": "papassage",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "2f84e8b5-9980-4065-903d-baa023313fb2",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "4b1b4410-9b3f-4e36-8fc8-b57db3da2c96",
            "attributes": {}
          },
          {
            "id": "e6532a19-605f-4f5d-b3d5-1590ea4aceb2",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "4b1b4410-9b3f-4e36-8fc8-b57db3da2c96",
            "attributes": {}
          },
          {
            "id": "30a834f7-3d9e-4409-9966-11872da4576f",
            "name": "default-roles-papassage",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "view-profile",
                  "manage-account"
                ]
              }
            },
            "clientRole": false,
            "containerId": "4b1b4410-9b3f-4e36-8fc8-b57db3da2c96",
            "attributes": {}
          }
        ],
        "client": {
          "papassage": [],
          "realm-management": [
            {
              "id": "4e835317-c176-464c-9d1a-5f34eda5335b",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "01c9364c-3b43-4181-bdb1-eac2c42bebf5",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "d31aacfd-4482-4c06-994b-b0a8a0aad8da",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "8f26558a-2c94-40f6-bebe-23cd859ab7d6",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "afe8c29d-071a-480f-b9e9-927383cd26d4",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "4f7fb935-4967-4843-b98e-0a67161c2414",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "715397e8-f917-4b1e-8e84-cfc0b3b341b0",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "cc33ca21-d02a-44f4-80dd-466888d94fd5",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "649963ba-3bb7-494a-996e-c37d51dbc11d",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-groups",
                    "impersonation",
                    "manage-events",
                    "query-users",
                    "view-events",
                    "manage-clients",
                    "manage-realm",
                    "query-clients",
                    "query-realms",
                    "view-identity-providers",
                    "view-users",
                    "manage-users",
                    "view-realm",
                    "view-authorization",
                    "manage-identity-providers",
                    "create-client",
                    "view-clients",
                    "manage-authorization"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "ae402e08-1496-480f-9e81-dd4d2f378516",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "416a3e05-ec69-4171-8a0c-bc964f91e91d",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "41648a4f-1bbc-4c83-986f-c9d8ff052667",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "4b913662-d79c-4b0e-a389-ec7e8469c9a9",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-groups",
                    "query-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "0253fafe-f43b-474e-8e2a-0f1c96425bbd",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "f5c29e4c-9646-4c05-89d8-44ff23bd33e0",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "b7547027-98e9-44b5-8ab0-99f017ad1a1e",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "aa6a596c-5172-4fad-9279-cb7053f8ae01",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "1783b8d1-f1b7-4bf4-8512-7e41bd9523d5",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            },
            {
              "id": "dd9b7ac1-fc35-49a7-aeb8-29f82bd5c9b3",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "account-console": [],
          "broker": [
            {
              "id": "dec9d71b-7e4c-41b4-b7e4-9ec3e4908303",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "94ded8a7-66eb-4b64-a0f6-3138daaa6912",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "43a65a5e-8f5e-41af-aa02-d74ec35836da",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
              "attributes": {}
            },
            {
              "id": "27abbeb8-2d9c-4216-adfe-ecb9a4d86c40",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
              "attributes": {}
            },
            {
              "id": "c3940083-a11a-4442-861a-69441dd56ca7",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
              "attributes": {}
            },
            {
              "id": "be456b8e-4b96-46ac-8f2f-d9fbe8fe8c56",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
              "attributes": {}
            },
            {
              "id": "2b60cd58-770b-4ab1-93b7-9c7196e63969",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
              "attributes": {}
            },
            {
              "id": "4e776ebc-8de4-483d-ade3-2de406ca80da",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
              "attributes": {}
            },
            {
              "id": "d95b0722-b0e7-4376-9ef8-df0172bd68c9",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
              "attributes": {}
            },
            {
              "id": "2e6fdc82-1b96-45fd-8e4d-40ca4a307a0a",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [
        {
          "id": "b12dd994-15bb-492f-a8eb-f21a5ec4b258",
          "name": "test",
          "path": "/test",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        }
      ],
      "defaultRole": {
        "id": "30a834f7-3d9e-4409-9966-11872da4576f",
        "name": "default-roles-papassage",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "4b1b4410-9b3f-4e36-8fc8-b57db3da2c96"
      },
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppGoogleName",
        "totpAppFreeOTPName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account",
              "view-groups"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "20daa4e7-05ef-4208-ad58-3068de54a9d2",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/papassage/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/papassage/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "9a08df8c-fb4b-403e-bb8a-e8f73fc6036c",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/papassage/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/papassage/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "ad8cdfc6-bd21-45e9-bc12-2a010e2d0dda",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "0306e2e8-7ad8-4ce5-834f-a747802bf9dd",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "94ded8a7-66eb-4b64-a0f6-3138daaa6912",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "6fc4401a-b834-4a27-8f46-aff8eedbfc88",
          "clientId": "papassage",
          "name": "papassage",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "saml",
          "attributes": {
            "saml.assertion.signature": "true",
            "saml.force.post.binding": "true",
            "saml.encrypt": "true",
            "post.logout.redirect.uris": "*",
            "saml_assertion_consumer_url_post": "https://{{ .Values.passage2.reverseproxy.hostname }}/mellon/postResponse",
            "saml.server.signature": "true",
            "saml_idp_initiated_sso_url_name": "papassage",
            "saml.server.signature.keyinfo.ext": "false",
            "saml.signing.certificate": "MIID0zCCAjsCFGbhGvVPI3jU+xETkq6OFxWRHXtTMA0GCSqGSIb3DQEBCwUAMCYxJDAiBgNVBAMMG3JwYS0xMjctMC0wLTEueGlwLmxoam1tYy5jbjAeFw0yMzA5MjcxMjQwMjNaFw0zMzA5MjYxMjQwMjNaMCYxJDAiBgNVBAMMG3JwYS0xMjctMC0wLTEueGlwLmxoam1tYy5jbjCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBALDSXsBzuCwZCu++Bcb01xynMNIAYj7d+ywx44oZZmLWrnQFvrSzcpvK3pcxvTf8REsr7omK0mdBWnhVvVlvXyretVAUvT/RbWjWMDJS+2bZZd6Sk80/i8y/IZIsMLqacCq5emiXamMCSoPQv7o+VmOeBrqTEgxm6Oz002E7pu2a53g4s3BtxW+7w+DHww4xtfStnKLrYtLbJTJX7WZUI2al0BmY9Kcm+WWezcMv/7/QlMsa4HQbbXGGikPJq9B1vVnPEXpK5c21so4C7xxHo138kzNZc4Yl8bOaxU/e0kTRIrRZxdD/PfxaonmJyfTN4RxGiw2+pP4Pkz20xrnoraN1mp8P3WuOmi/kTON0BGoHYqmq/4+kP6b485973heb08t00njNYVT/8pdk7TsY4nK6A0q11fiK5wWV9K09vhiI5x1cdFdMs7bKUc6nnaL8zCUIabBEXNQ8D1sV4o5WQPxKvuGnU0VsCPyevPW1GDVj64aAQ0iZcjy+6QuYvaihJwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBgQCHQifsDJnJJ/S5CG6WZXRPzW/VJcWPwyfP6XlpwX+JS7CoPFQD7/VfSXTuyQVN0pksOULAyvXhMOMgnCNJ4YS8SjDQevARGh8woPv1NIAW1JavdI9yMqQaadOOHGFu+S5czm9areOqM02PNU6lzcLOeGIL1fKESpnFt6PUcyYpGfuPfiFe820ABEepze7HBS0Tp021zXd6r7aHSyv6n0/puFg0N/ygrZt00SDPr7jppkXSLVgzwLi1in4lm7W0YZmgToaoYV7vtCknZA58GIJzBytZYPl8/mkj8lbHnyZ/5vfuYB+DoixAdB86jrJA3atX9Lu3R0R0qn8obtoFZw/Mi/OFAoUEoMijuHvSQ3gHqxSNsVoMBHLB8TenYBfgxt/b2VVe7dUip5RK5ezJoGbEPT54MJ4tHOlJJY4irZVNI14zhuQ07O0nTJD8eaOAyXgSH7gkynf9iA5eEiEO+oaoKBOuwxKwVv4zh5rq9u0JohD8IJN5IcAjZe+OhjF5iwk=",
            "saml.artifact.binding.identifier": "eTTArZ2XGS9P6aZ5s3NJMhfyTrs=",
            "saml.artifact.binding": "false",
            "saml.signature.algorithm": "RSA_SHA256",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "true",
            "saml.encryption.certificate": "MIID0zCCAjsCFGbhGvVPI3jU+xETkq6OFxWRHXtTMA0GCSqGSIb3DQEBCwUAMCYxJDAiBgNVBAMMG3JwYS0xMjctMC0wLTEueGlwLmxoam1tYy5jbjAeFw0yMzA5MjcxMjQwMjNaFw0zMzA5MjYxMjQwMjNaMCYxJDAiBgNVBAMMG3JwYS0xMjctMC0wLTEueGlwLmxoam1tYy5jbjCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBALDSXsBzuCwZCu++Bcb01xynMNIAYj7d+ywx44oZZmLWrnQFvrSzcpvK3pcxvTf8REsr7omK0mdBWnhVvVlvXyretVAUvT/RbWjWMDJS+2bZZd6Sk80/i8y/IZIsMLqacCq5emiXamMCSoPQv7o+VmOeBrqTEgxm6Oz002E7pu2a53g4s3BtxW+7w+DHww4xtfStnKLrYtLbJTJX7WZUI2al0BmY9Kcm+WWezcMv/7/QlMsa4HQbbXGGikPJq9B1vVnPEXpK5c21so4C7xxHo138kzNZc4Yl8bOaxU/e0kTRIrRZxdD/PfxaonmJyfTN4RxGiw2+pP4Pkz20xrnoraN1mp8P3WuOmi/kTON0BGoHYqmq/4+kP6b485973heb08t00njNYVT/8pdk7TsY4nK6A0q11fiK5wWV9K09vhiI5x1cdFdMs7bKUc6nnaL8zCUIabBEXNQ8D1sV4o5WQPxKvuGnU0VsCPyevPW1GDVj64aAQ0iZcjy+6QuYvaihJwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBgQCHQifsDJnJJ/S5CG6WZXRPzW/VJcWPwyfP6XlpwX+JS7CoPFQD7/VfSXTuyQVN0pksOULAyvXhMOMgnCNJ4YS8SjDQevARGh8woPv1NIAW1JavdI9yMqQaadOOHGFu+S5czm9areOqM02PNU6lzcLOeGIL1fKESpnFt6PUcyYpGfuPfiFe820ABEepze7HBS0Tp021zXd6r7aHSyv6n0/puFg0N/ygrZt00SDPr7jppkXSLVgzwLi1in4lm7W0YZmgToaoYV7vtCknZA58GIJzBytZYPl8/mkj8lbHnyZ/5vfuYB+DoixAdB86jrJA3atX9Lu3R0R0qn8obtoFZw/Mi/OFAoUEoMijuHvSQ3gHqxSNsVoMBHLB8TenYBfgxt/b2VVe7dUip5RK5ezJoGbEPT54MJ4tHOlJJY4irZVNI14zhuQ07O0nTJD8eaOAyXgSH7gkynf9iA5eEiEO+oaoKBOuwxKwVv4zh5rq9u0JohD8IJN5IcAjZe+OhjF5iwk=",
            "saml.authnstatement": "true",
            "display.on.consent.screen": "false",
            "saml_name_id_format": "username",
            "saml.allow.ecp.flow": "false",
            "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
            "saml.onetimeuse.condition": "false",
            "saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer": "NONE"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "role_list",
            "groups"
          ],
          "optionalClientScopes": []
        },
        {
          "id": "f7882536-79b7-4fb2-8ae4-65306f870c8b",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "2eba1700-6183-499c-b611-de2666dcf876",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/papassage/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/admin/papassage/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "cb4dcd41-07fe-4277-9388-f4a82595a82e",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "2ed72021-dba1-44a9-b3e4-4bb453b8711a",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "36f4bfbe-95da-47a8-a07e-8975862bb8c4",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "8374129f-3a75-4133-bbd4-769276328a47",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "1f507849-24e1-44dd-b223-31b1ed409ee4",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ]
        },
        {
          "id": "c6591c77-3ac4-4d6d-b0c7-222c90eba54d",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "69efe6dc-a00b-4596-842d-84e346f941d1",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "af068a45-7551-4cc6-9d8f-9e7a66f1f689",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "25f8579b-922d-4eee-9ab1-f517d2323a16",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "8a238c44-f67d-47ae-bf74-189ebc11cb92",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "68f55b8c-2321-4082-b245-e752a52cd513",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "22603b30-ee6e-4135-bf8b-0f0bd2d74426",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "8217898d-b817-4a14-94c4-c974d9ef1417",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "f07432c2-0695-401d-9f90-7bb5b9173b71",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "eccdb7c8-95e7-4baa-9839-2f0d5b763d47",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "9dcf3582-b3cd-49f2-80f3-e4bee1918c63",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "id": "d820a866-88be-4933-b119-46c57e6cc7ca",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "80861b4d-a5d7-4c93-8ec9-94ce490c7dce",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "438fe542-1886-40f2-bb38-f4d7bfd461f5",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "a37d56ea-c37e-4800-961e-4e58537353f3",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "bb52e0cf-5ce8-4553-aa0b-442185bfca87",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "7c003315-a2d4-4cf1-9e3d-3e784f64ccb2",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1ce0fd0e-f04b-4422-bb58-2557c3aa45cf",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "67495cb5-4d33-49f5-8ab0-442bc387e67f",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "a7d5dfc6-184a-4a23-a57a-d63dafe43470",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            },
            {
              "id": "98cc9c47-b64c-42e6-a912-9f2844a85aaf",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "8d1cdd3f-aec9-4393-b1cc-1a4c8fe5bb6e",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "54b103fe-6e1e-4e8d-a65b-c691311c6528",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "c1f325ef-70e9-4858-8340-f92e492a2aee",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "8d790bfd-a911-418a-988d-6db60119d9da",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "d1eb6a8c-0d36-47a3-bbd6-bed8eab85be1",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "9f91e295-a26e-4087-a729-dc8021d3dca2",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "285b1592-2646-48a8-bcc4-e052b64cfb52",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "3a3a9cef-e990-47da-8b93-b0d4a0c2c25d",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "8acee141-393c-4f16-a157-7582d3e5c97c",
          "name": "groups",
          "description": "groups",
          "protocol": "saml",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "e51874ea-f752-4b16-b545-4bc475e514c1",
              "name": "groups",
              "protocol": "saml",
              "protocolMapper": "saml-group-membership-mapper",
              "consentRequired": false,
              "config": {
                "single": "true",
                "attribute.nameformat": "Basic",
                "full.path": "false",
                "friendly.name": "groups",
                "attribute.name": "groups"
              }
            }
          ]
        },
        {
          "id": "5503d16b-598d-4f3d-b44a-5195ad3145fc",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "bcde9735-4ea0-48d6-8a96-e9ae46418d35",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "c6c2dcf1-d883-4e39-b260-31555e6faf86",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "6cde1936-ec31-4ba8-b33e-83771fb797fa",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr",
        "groups"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "eventsEnabled": true,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [
        "UPDATE_CONSENT_ERROR",
        "SEND_RESET_PASSWORD",
        "GRANT_CONSENT",
        "VERIFY_PROFILE_ERROR",
        "UPDATE_TOTP",
        "REMOVE_TOTP",
        "REVOKE_GRANT",
        "LOGIN_ERROR",
        "CLIENT_LOGIN",
        "RESET_PASSWORD_ERROR",
        "IMPERSONATE_ERROR",
        "CODE_TO_TOKEN_ERROR",
        "CUSTOM_REQUIRED_ACTION",
        "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
        "RESTART_AUTHENTICATION",
        "UPDATE_PROFILE_ERROR",
        "IMPERSONATE",
        "LOGIN",
        "UPDATE_PASSWORD_ERROR",
        "OAUTH2_DEVICE_VERIFY_USER_CODE",
        "CLIENT_INITIATED_ACCOUNT_LINKING",
        "TOKEN_EXCHANGE",
        "REGISTER",
        "LOGOUT",
        "AUTHREQID_TO_TOKEN",
        "DELETE_ACCOUNT_ERROR",
        "CLIENT_REGISTER",
        "IDENTITY_PROVIDER_LINK_ACCOUNT",
        "UPDATE_PASSWORD",
        "DELETE_ACCOUNT",
        "FEDERATED_IDENTITY_LINK_ERROR",
        "CLIENT_DELETE",
        "IDENTITY_PROVIDER_FIRST_LOGIN",
        "VERIFY_EMAIL",
        "CLIENT_DELETE_ERROR",
        "CLIENT_LOGIN_ERROR",
        "RESTART_AUTHENTICATION_ERROR",
        "REMOVE_FEDERATED_IDENTITY_ERROR",
        "EXECUTE_ACTIONS",
        "TOKEN_EXCHANGE_ERROR",
        "PERMISSION_TOKEN",
        "SEND_IDENTITY_PROVIDER_LINK_ERROR",
        "EXECUTE_ACTION_TOKEN_ERROR",
        "SEND_VERIFY_EMAIL",
        "OAUTH2_DEVICE_AUTH",
        "EXECUTE_ACTIONS_ERROR",
        "REMOVE_FEDERATED_IDENTITY",
        "OAUTH2_DEVICE_CODE_TO_TOKEN",
        "IDENTITY_PROVIDER_POST_LOGIN",
        "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
        "UPDATE_EMAIL",
        "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
        "REGISTER_ERROR",
        "REVOKE_GRANT_ERROR",
        "LOGOUT_ERROR",
        "UPDATE_EMAIL_ERROR",
        "EXECUTE_ACTION_TOKEN",
        "CLIENT_UPDATE_ERROR",
        "UPDATE_PROFILE",
        "AUTHREQID_TO_TOKEN_ERROR",
        "FEDERATED_IDENTITY_LINK",
        "CLIENT_REGISTER_ERROR",
        "SEND_VERIFY_EMAIL_ERROR",
        "SEND_IDENTITY_PROVIDER_LINK",
        "RESET_PASSWORD",
        "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
        "OAUTH2_DEVICE_AUTH_ERROR",
        "UPDATE_CONSENT",
        "REMOVE_TOTP_ERROR",
        "VERIFY_EMAIL_ERROR",
        "SEND_RESET_PASSWORD_ERROR",
        "CLIENT_UPDATE",
        "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
        "CUSTOM_REQUIRED_ACTION_ERROR",
        "UPDATE_TOTP_ERROR",
        "CODE_TO_TOKEN",
        "VERIFY_PROFILE",
        "GRANT_CONSENT_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
      ],
      "adminEventsEnabled": true,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "11c66dc7-bd4c-45b6-8504-8069fa198a86",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "9b4aab91-a1be-4422-b742-af3a914f7b6a",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "37496073-7b90-45d1-8ee0-507ec06de7d5",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "9defeead-58e8-4022-a5d9-59367cc83c8d",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "4125f64c-11a7-4f5b-a7d2-854b5c49b709",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "18566839-1e54-49d1-91dd-0d9df6e8f3dd",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-user-attribute-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-usermodel-property-mapper",
                "oidc-address-mapper",
                "saml-user-property-mapper",
                "saml-role-list-mapper",
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper"
              ]
            }
          },
          {
            "id": "82948990-5e9d-4456-a664-bccfdf0612fd",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-user-attribute-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-address-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-usermodel-property-mapper",
                "saml-role-list-mapper",
                "saml-user-property-mapper",
                "oidc-full-name-mapper"
              ]
            }
          },
          {
            "id": "55ed9b11-dc2c-4837-a3a9-5ca24b26f7bb",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          }
        ],
        "org.keycloak.userprofile.UserProfileProvider": [
          {
            "id": "812f782d-cdfd-4409-9bae-7b5edb47e552",
            "providerId": "declarative-user-profile",
            "subComponents": {},
            "config": {}
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "09b2ece6-2161-4b69-8a6a-6a9bae143c14",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "947fb150-caf0-4074-a359-04db00f59113",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "RSA-OAEP"
              ]
            }
          },
          {
            "id": "a129a66d-d41c-4594-a8bc-531e6ec6193e",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS256"
              ]
            }
          },
          {
            "id": "6c74a416-b723-4caa-8618-cc6c434f7404",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "b2528ad6-6c5f-4b84-96a7-f070afc6b3bc",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "e3efdfdb-7cfe-4520-a2c6-2488433047bd",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "89827ca3-47e3-4da4-ac82-1a1de7b5b1bb",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "bd139cd7-530c-4dfd-80dc-c915265b6152",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "30f8b618-5a54-418c-933b-7ccaede9b44b",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c1729d98-7223-4930-a532-3fdfdb26b34d",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8a39a88e-69d9-49c1-8447-935a27587c2a",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8c0aa441-d3dd-4bd1-bfde-0cfb706a9528",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "073952e5-e6c0-4175-a9ea-f5aa14acb0f5",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b5e952d6-7804-4070-84c2-93ec59c492f1",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "bf46962a-accb-4e78-8050-7b63ad35dbf0",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "605c7744-9201-4e74-9dcf-d97626e1a630",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b9a7a5dd-9ce0-4859-980b-550515be27b5",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ecce7ced-f4a3-4e42-b7b3-bffab155600c",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "6449715e-40cc-40da-a077-521f369901ba",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ca5240e2-1cec-450d-ada9-9ef04a05644f",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-profile-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "568583a7-2f58-49c5-b1db-ad002e2eeded",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8aff362e-bac5-49f2-8db5-4c20477ba3e7",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "a0b5d704-1a70-465d-84ba-4856220676fd",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "74aaae57-668d-4fb7-83e8-f74e3f6880d1",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "webauthn-register",
          "name": "Webauthn Register",
          "providerId": "webauthn-register",
          "enabled": true,
          "defaultAction": false,
          "priority": 70,
          "config": {}
        },
        {
          "alias": "webauthn-register-passwordless",
          "name": "Webauthn Register Passwordless",
          "providerId": "webauthn-register-passwordless",
          "enabled": true,
          "defaultAction": false,
          "priority": 80,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DevicePollingInterval": "5",
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "adminEventsExpiration": ""
      },
      "keycloakVersion": "22.0.1",
      "userManagedAccessAllowed": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
      "users": [
        {
          "username": "test",
          "enabled": true,
          "emailVerified": true,
          "firstName": "test",
          "lastName": "test",
          "email": "test@test.com",
          "credentials": [
            {
              "type": "password",
              "value": "test"
            }
          ],
        }
      ]

    }
{{- end -}}